import os
import reply

from aiogram import  Bot, types, F
from aiogram.enums import ParseMode
from edit_docx_functions import send_file
from reply import inline_kb



# –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ñ—Ä–∞–∑—ã
acceptable_words = {'üìù –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '‚úçÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–ª–∞–µ—Ä', '‚ûï –í—ã—á–∏—Å–ª–∏—Ç—å', 'üí¨ –û –±–æ—Ç–µ', '‚úîÔ∏è –ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª', 'üìñ –ú–µ—Ç–æ–¥–∏—á–∫–∞', 'üìä Excel —Ç–∞–±–ª–∏—Ü—ã', '‚òëÔ∏è –ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä', 'üìë –í—ã–±—Ä–∞—Ç—å –µ—â–µ', '‚úÖ –î–∞', '‚ùå –ù–µ—Ç', 'üî∂ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞', 'üî∂ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'üî∂ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–π –ø–ª–∞–Ω', 'üî∂ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–ª–∞–Ω', 'üî∂ –ü–ª–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞', 'üî∂ –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤', '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'üìî –®–∞–±–ª–æ–Ω –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∞', 'üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏', '‚úèÔ∏è –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é', 'üîπ –û–∫—É–ø–∞–µ–º–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π (ROI)', 'üîπ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫–ª–∏–∫–∞ (CPC)', 'üîπ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ä—ã–Ω–æ–∫ (PAM)', 'üîπ –û–±—â–∏–π –æ–±—ä–µ–º —Ä—ã–Ω–∫–∞ (TAM)', 'üîπ –î–æ—Å—Ç—É–ø–Ω–∞—è –µ–º–∫–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ (SAM)','üîπ –ò–Ω–¥–µ–∫—Å –ø–æ—Ç—Ä–µ–±. –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (NPS)', 'üî∂ –ë–µ–Ω—á–º–∞—Ä–∫–∏–Ω–≥', 'üî∂ Pest –∞–Ω–∞–ª–∏–∑', 'üî∂ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'üî∂ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã'}
del_count = 0
deleted_messages_ids = []
user_inputs = {}

bot = Bot(token=os.getenv('TOKEN'))


async def del_mess(message: types.Message):
    global del_count
    chat_id = message.chat.id
    text = message.text

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º–æ–π –∫–æ–º–∞–Ω–¥–æ–π –∏–ª–∏ —Ñ—Ä–∞–∑–æ–π
    if text not in {word for word in acceptable_words}:
        warning_message = await message.answer(f"{message.from_user.first_name}, —è –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã üò•")
        await message.delete()
        del_count += 1
        deleted_messages_ids.append(warning_message.message_id)
        if del_count > 3:
            message_id_to_delete = deleted_messages_ids.pop(0)
            await message.bot.delete_message(chat_id=chat_id, message_id=message_id_to_delete)

async def cmd_calculate(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å:", reply_markup=reply.calculate_keyboard)

async def —Åmd_about_bot(message: types.Message):
    response = ("<b>–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É:</b>\n\n"
                "‚úÖ –ü–æ–º–æ—á—å —Å–æ–∑–¥–∞—Ç—å –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω\n"
                "‚úÖ –ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑\n"
                "‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
    await message.answer(response, parse_mode=ParseMode.HTML, reply_markup=reply.back_keyboard)

async def cmd_return_back(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=reply.start_keyboard)
    

async def cmd_create_plan(message: types.Message):
    await message.answer("–î–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –≤–∞—à —Ç–∏—Ç—É–ª—å–Ω—ã–π –ª–∏—Å—Ç!", reply_markup=reply.create_plan_keyboard)

async def cmd_pattern(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="business-plan_sample.docx")
    await message.answer("‚è´ –ü—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∞ ‚è´", reply_markup=reply.helpful_keyboard)

async def cmd_manual(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="business-plan_manual.docx")
    await message.answer("‚è´ –ú–µ—Ç–æ–¥–∏—á–∫–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –±–∏–∑–Ω–µ—Å –ø–ª–∞–Ω–∞ ‚è´", reply_markup=reply.helpful_keyboard)

async def cmd_benchmarking(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="benchmarking.xlsx")
    await message.answer("‚è´ –ë–µ–Ω—á–º–∞—Ä–∫–∏–Ω–≥ ‚è´", reply_markup=reply.excel_docs_keyboard)

async def cmd_pest(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="pest-analysis.xlsx")
    await message.answer("‚è´ PEST –∞–Ω–∞–ª–∏–∑ ‚è´", reply_markup=reply.excel_docs_keyboard)

async def cmd_competitors(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="competitors.xlsx")
    await message.answer("‚è´ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã ‚è´", reply_markup=reply.excel_docs_keyboard)

async def cmd_product_description(message: types.Message, download_url: str):
    await send_file(message.chat.id, download_url, filename="product_description.xlsx")
    await message.answer("‚è´ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ‚è´", reply_markup=reply.excel_docs_keyboard)

async def cancel_choose(message: types.Message):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ!\n\n–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —à–∞–±–ª–æ–Ω–∞!", reply_markup=reply.create_plan_keyboard)

async def cmd_helpful(message: types.Message):
    await message.answer("–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:", reply_markup=reply.helpful_keyboard)

async def cmd_links(message: types.Message):
    await message.answer("–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:", reply_markup=inline_kb)

async def excel_upload(message: types.Message):
    await message.answer("–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:", reply_markup=reply.excel_docs_keyboard)










       
